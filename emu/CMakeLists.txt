
include_directories("include")
add_executable(engine srcs/main.cpp srcs/city.cpp srcs/rw.cpp srcs/distributed_sort.cpp srcs/rw_request.cpp srcs/query_parser.cpp srcs/ssd_buffer.cpp srcs/query_engine.cpp srcs/write_buffer.cpp srcs/process.cpp srcs/event.cpp)
#add_executable(post_processing srcs/post_processing.cpp)
#add_executable(hdf5_workload hdf5_workload3.cpp)
add_library(${PROJECT_NAME} SHARED srcs)
include_directories(${PROJECT_NAME} include)
target_link_directories(${PROJECT_NAME} PUBLIC ${MERCURY_PATH}/lib)
target_link_directories(${PROJECT_NAME} PUBLIC ${ABT_PATH}/lib)
target_link_directories(${PROJECT_NAME} PUBLIC ${MARGO_PATH}/lib)
target_link_directories(${PROJECT_NAME} PUBLIC ${HDF5_PATH}/lib)
target_link_directories(${PROJECT_NAME} PUBLIC "/sw/spack/deltas11-2023-03/apps/linux-rhel8-zen/gcc-8.5.0/intel-tbb-2021.9.0-m5eh674/lib64")
target_link_directories(${PROJECT_NAME} PUBLIC ${MPI_PATH}/lib)
target_link_directories(${PROJECT_NAME} PUBLIC ${JSONC_PATH}/lib64)
target_link_directories(${PROJECT_NAME} PUBLIC "/sw/external/boost/boost_1_81_0/stage/lib")
#target_link_libraries(${PROJECT_NAME} ${MPI_CXX_LIBRARIES} thallium ${HDF5_C_LIBRARIES} -L${HDF5_VOL_ASYNC}/lib -lasynchdf5 -lh5async ${Boost_LIBRARIES} -lpthread -lrt)
target_link_libraries(${PROJECT_NAME} margo mercury mercury_util na abt mpicxx mpi hdf5 boost_system boost_atomic boost_thread tbb tbbmalloc pthread rt)
set_target_properties(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)
install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
install(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
#target_link_libraries(engine ${MPI_CXX_LIBRARIES} thallium ${HDF5_C_LIBRARIES} -L${HDF5_VOL_ASYNC}/lib -lasynchdf5 -lh5async ${Boost_LIBRARIES} -lpthread -lrt)
target_link_directories(engine PUBLIC ${MERCURY_PATH}/lib)
target_link_directories(engine PUBLIC ${ABT_PATH}/lib)
target_link_directories(engine PUBLIC ${MARGO_PATH}/lib)
target_link_directories(engine PUBLIC ${HDF5_PATH}/lib)
target_link_directories(engine PUBLIC "/sw/spack/deltas11-2023-03/apps/linux-rhel8-zen/gcc-8.5.0/intel-tbb-2021.9.0-m5eh674/lib64")
target_link_directories(engine PUBLIC ${MPI_PATH}/lib)
target_link_directories(engine PUBLIC "/sw/external/boost/boost_1_81_0/stage/lib")
target_link_directories(engine PUBLIC ${JSONC_PATH}/lib64)
target_link_libraries(engine margo mercury mercury_util na abt mpicxx mpi hdf5 boost_system boost_atomic boost_thread tbb tbbmalloc pthread rt)
#target_link_libraries(post_processing ${MPI_CXX_LIBRARIES} thallium ${HDF5_C_LIBRARIES} -L${HDF5_VOL_ASYNC}/lib -lasynchdf5 -lh5async ${Boost_LIBRARIES} -lpthread -lrt)
#target_link_libraries(hdf5_workload ${HDF5_C_LIBRARIES} -L${HDF5_VOL_ASYNC}/lib -lasynchdf5 -lh5async -lm)
#target_link_libraries(hdf5_workload ${HDF5_C_LIBRARIES} -lm)
set_target_properties(engine PROPERTIES FOLDER emu)
#set_target_properties(post_processing PROPERTIES FOLDER emu)
